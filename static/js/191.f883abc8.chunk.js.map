{"version":3,"file":"static/js/191.f883abc8.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/Form/Form.styled.js","pages/MovieList/MovieList.jsx","pages/MovieList/MovieList.styled.js","pages/Search/Search.jsx","server/api.js"],"sourcesContent":["import { Input, Button, FormBox } from './Form.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nexport default function Form({ submit, value, onChang }) {\n  return (\n    <div>\n      <FormBox autoComplete=\"off\" onSubmit={submit}>\n        <Button type=\"submit\">\n          <FaSearch size={29} />\n        </Button>\n        <Input\n          type=\"text\"\n          autoFocus\n          value={value}\n          name=\"name\"\n          onChange={e => onChang(e.target.value)}\n        />\n      </FormBox>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  onChang: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FormBox = styled.form`\n  margin: 0 auto;\n  width: 50vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  font-style: inherit;\n  font-variant: inherit;\n  font-weight: inherit;\n  font-stretch: inherit;\n  line-height: inherit;\n  font-family: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 5px 10px;\n  text-align: center;\n  margin: 0 auto;\n  border-radius: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 0;\n  left: calc(100% + 5px);\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { IMG_URL, serverHitsList } from 'server/api';\nimport {\n  List,\n  Elements,\n  ElementsBox,\n  TextBox,\n  Title,\n  Rating,\n  TitleH1,\n} from './MovieList.styled';\n\nexport default function MovieList({ list }) {\n  const [movie, setMovie] = useState([]);\n  const [title, setTitle] = useState(true);\n  const location = useLocation();\n  const url = location.pathname === '/' ? `movies/` : '';\n\n  useEffect(() => {\n    if (list) {\n      setTitle(false);\n      setMovie(list);\n      return;\n    }\n    dataList();\n  }, [list]);\n\n  async function dataList() {\n    const data = await serverHitsList();\n    const hits = await data.results.map(x => {\n      return Object.fromEntries(\n        Object.entries(x).filter(([key]) =>\n          [\n            'id',\n            'poster_path',\n            'title',\n            'genre_ids',\n            'release_date',\n            'vote_average',\n          ].includes(key)\n        )\n      );\n    });\n\n    setMovie(hits);\n  }\n\n  return (\n    <section>\n      {title && <TitleH1>Список нових фільмів</TitleH1>}\n\n      <List>\n        {movie.map(({ id, poster_path, title, release_date, vote_average }) => {\n          return (\n            <Elements key={id}>\n              <Link to={`${url}${id}`}>\n                <img src={IMG_URL + poster_path} alt={title} />\n                <ElementsBox>\n                  <Title>{title}</Title>\n                  <TextBox>\n                    <p>{release_date}</p>\n                    <Rating rating={vote_average}>\n                      {vote_average.toFixed(1)}\n                    </Rating>\n                  </TextBox>\n                </ElementsBox>\n              </Link>\n            </Elements>\n          );\n        })}\n      </List>\n    </section>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 20px 0;\n`;\n\nexport const TitleH1 = styled.h1`\n  font-family: 'Orbitron', sans-serif;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(290px, 1fr));\n  max-width: 100vw - 45px;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nexport const Elements = styled.li`\n  position: relative;\n  height: 100%;\n`;\n\nexport const ElementsBox = styled.div`\n  padding: 5px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #000;\n  color: #fff;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 1.2em;\n`;\n\nexport const TextBox = styled.div`\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Rating = styled.p`\n  padding: 3px;\n  border: 2px solid;\n  border-radius: 50%;\n  border-color: ${props => props.rating >= 7.5 && 'green'};\n  border-color: ${props =>\n    props.rating < 7.5 && props.rating >= 5.6 && 'orange'};\n  border-color: ${props => props.rating <= 5.5 && 'red'};\n  border-color: ${props => props.rating === 0 && '#fff'};\n`;\n\nexport const TextError = styled.p`\n  margin-top: 20px;\n  font-size: 20px;\n  text-align: center;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { serverSearch } from 'server/api';\nimport Form from 'components/Form/Form';\nimport MovieList from 'pages/MovieList/MovieList';\nimport { Main, TextError } from 'pages/MovieList/MovieList.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Search() {\n  const [value, setValue] = useState('');\n  const [moviesList, setMoviesList] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesName = searchParams.get('name') ?? '';\n  const histori = window.location.search.split('=')[1];\n\n  useEffect(() => {\n    if (!value && !histori) {\n      return;\n    }\n    if (!value) {\n      serverData(histori);\n      return;\n    }\n\n    serverData(value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setValue(event.target.name.value);\n  }\n\n  function onChang(name) {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  }\n\n  async function serverData(name) {\n    setError(false);\n    setLoader(true);\n    const data = await serverSearch(name);\n    const results = await data.results;\n    setMoviesList(results);\n    if (!results.length) {\n      setError(true);\n    }\n    setLoader(false);\n  }\n\n  return (\n    <Main>\n      <section>\n        <Form submit={onSubmit} value={moviesName} onChang={onChang} />\n        {loader && <Loader />}\n        {error && (\n          <TextError>\n            Вибачте але ми нічого не занйщли. Нам жуже сумно &#128557; Спробуйте\n            ще раз\n          </TextError>\n        )}\n        <MovieList list={moviesList} />\n      </section>\n    </Main>\n  );\n}\n","import axios from 'axios';\n// const axios = require('axios').default;\nconst KEY = '8478375b0b2eb45c66ac10717e1ab9a2';\nconst URL = 'https://api.themoviedb.org/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const serverHitsList = async (page = 1) => {\n  const serverDataURL = `${URL}3/trending/movie/day?api_key=${KEY}&page=${page}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverSearch = async (name, page = 1) => {\n  const serverDataURL = `${URL}3/search/movie?api_key=${KEY}&language=uk-UA&query=${name}&page=${page}&include_adult=false`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverMovie = async id => {\n  const serverDataURL = `${URL}3/movie/${id}?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverActors = async id => {\n  const serverDataURL = `${URL}3/movie/${id}/credits?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponse = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=uk-UA&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponseUS = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// async function serverHitsList(page = 1) {}\n\n// async function serverSearch(name, page = 1) {}\n\n// async function serverMovie(id) {}\n\n// async function (id) {}\n\n// async function serverResponse(id, page = 1) {}\n\n// async function serverResponseUS(id, page = 1) {}\n"],"names":["Form","submit","value","onChang","FormBox","autoComplete","onSubmit","Button","type","size","Input","autoFocus","name","onChange","e","target","styled","MovieList","list","useState","movie","setMovie","title","setTitle","url","useLocation","pathname","serverHitsList","data","results","map","x","Object","fromEntries","entries","filter","key","includes","hits","useEffect","dataList","TitleH1","List","id","poster_path","release_date","vote_average","Elements","to","src","IMG_URL","alt","ElementsBox","Title","TextBox","Rating","rating","toFixed","Main","props","TextError","Search","setValue","moviesList","setMoviesList","loader","setLoader","error","setError","useSearchParams","searchParams","setSearchParams","moviesName","get","histori","window","location","search","split","serverData","serverSearch","length","event","preventDefault","Loader","KEY","URL","page","serverDataURL","axios","server","console","serverMovie","serverActors","serverResponse","serverResponseUS"],"sourceRoot":""}