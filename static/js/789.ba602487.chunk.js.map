{"version":3,"file":"static/js/789.ba602487.chunk.js","mappings":"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","sources":["pages/MovieList/MovieList.jsx","pages/MovieList/MovieList.styled.js","server/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { IMG_URL, serverHitsList } from 'server/api';\nimport {\n  List,\n  Elements,\n  ElementsBox,\n  TextBox,\n  Title,\n  Rating,\n  TitleH1,\n} from './MovieList.styled';\n\nexport default function MovieList({ list }) {\n  const [movie, setMovie] = useState([]);\n  const [title, setTitle] = useState(true);\n  const location = useLocation();\n  const url = location.pathname === '/' ? `movies/` : '';\n\n  useEffect(() => {\n    if (list) {\n      setTitle(false);\n      setMovie(list);\n      return;\n    }\n    dataList();\n  }, [list]);\n\n  async function dataList() {\n    const data = await serverHitsList();\n    const hits = await data.results.map(x => {\n      return Object.fromEntries(\n        Object.entries(x).filter(([key]) =>\n          [\n            'id',\n            'poster_path',\n            'title',\n            'genre_ids',\n            'release_date',\n            'vote_average',\n          ].includes(key)\n        )\n      );\n    });\n\n    setMovie(hits);\n  }\n\n  return (\n    <section>\n      {title && <TitleH1>Список нових фільмів</TitleH1>}\n\n      <List>\n        {movie.map(({ id, poster_path, title, release_date, vote_average }) => {\n          return (\n            <Elements key={id}>\n              <Link to={`${url}${id}`}>\n                <img src={IMG_URL + poster_path} alt={title} />\n                <ElementsBox>\n                  <Title>{title}</Title>\n                  <TextBox>\n                    <p>{release_date}</p>\n                    <Rating rating={vote_average}>\n                      {vote_average.toFixed(1)}\n                    </Rating>\n                  </TextBox>\n                </ElementsBox>\n              </Link>\n            </Elements>\n          );\n        })}\n      </List>\n    </section>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 20px 0;\n`;\n\nexport const TitleH1 = styled.h1`\n  font-family: 'Orbitron', sans-serif;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(290px, 1fr));\n  max-width: 100vw - 45px;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nexport const Elements = styled.li`\n  position: relative;\n  height: 100%;\n`;\n\nexport const ElementsBox = styled.div`\n  padding: 5px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #000;\n  color: #fff;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 1.2em;\n`;\n\nexport const TextBox = styled.div`\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Rating = styled.p`\n  padding: 3px;\n  border: 2px solid;\n  border-radius: 50%;\n  border-color: ${props => props.rating >= 7.5 && 'green'};\n  border-color: ${props =>\n    props.rating < 7.5 && props.rating >= 5.6 && 'orange'};\n  border-color: ${props => props.rating <= 5.5 && 'red'};\n  border-color: ${props => props.rating === 0 && '#fff'};\n`;\n\nexport const TextError = styled.p`\n  margin-top: 20px;\n  font-size: 20px;\n  text-align: center;\n`;\n","import axios from 'axios';\n// const axios = require('axios').default;\nconst KEY = '8478375b0b2eb45c66ac10717e1ab9a2';\nconst URL = 'https://api.themoviedb.org/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const serverHitsList = async (page = 1) => {\n  const serverDataURL = `${URL}3/trending/movie/day?api_key=${KEY}&page=${page}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverSearch = async (name, page = 1) => {\n  const serverDataURL = `${URL}3/search/movie?api_key=${KEY}&language=uk-UA&query=${name}&page=${page}&include_adult=false`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverMovie = async id => {\n  const serverDataURL = `${URL}3/movie/${id}?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverActors = async id => {\n  const serverDataURL = `${URL}3/movie/${id}/credits?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponse = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=uk-UA&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponseUS = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// async function serverHitsList(page = 1) {}\n\n// async function serverSearch(name, page = 1) {}\n\n// async function serverMovie(id) {}\n\n// async function (id) {}\n\n// async function serverResponse(id, page = 1) {}\n\n// async function serverResponseUS(id, page = 1) {}\n"],"names":["MovieList","list","useState","movie","setMovie","title","setTitle","url","useLocation","pathname","serverHitsList","data","results","map","x","Object","fromEntries","entries","filter","key","includes","hits","useEffect","dataList","TitleH1","List","id","poster_path","release_date","vote_average","Elements","to","src","IMG_URL","alt","ElementsBox","Title","TextBox","Rating","rating","toFixed","Main","styled","props","TextError","KEY","URL","page","serverDataURL","axios","server","console","error","serverSearch","name","serverMovie","serverActors","serverResponse","serverResponseUS"],"sourceRoot":""}