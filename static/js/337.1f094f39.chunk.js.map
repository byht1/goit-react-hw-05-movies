{"version":3,"file":"static/js/337.1f094f39.chunk.js","mappings":"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","sources":["pages/Movie/Movie.jsx","pages/Movie/Movie.styled.js","server/api.js"],"sourcesContent":["import { Container } from 'App.styled';\nimport React, { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { IMG_URL, serverMovie } from 'server/api';\nimport defoltImg from '../../img/defolt-poster.jpg';\nimport {\n  ContainerMovie,\n  Img,\n  InfoMovie,\n  Title,\n  TextDecoration,\n  ButtonGoBack,\n  Section,\n  LinkA,\n  ListLink,\n} from './Movie.styled';\nimport { Loader } from './../../components/Loader/Loader';\n\nexport default function Movie() {\n  const { id } = useParams();\n  const [movieCard, setMovieCard] = useState({});\n  const [goBack, setGoBack] = useState(1);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    serverDate();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function goBackPage() {\n    navigate(-goBack);\n    setGoBack(1);\n    return;\n  }\n\n  async function serverDate() {\n    const data = await serverMovie(id);\n    setMovieCard(data);\n  }\n\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    genres,\n    runtime,\n    overview,\n  } = movieCard;\n\n  return (\n    <main>\n      <ButtonGoBack onClick={goBackPage}>\n        <IoIosArrowBack size={40} /> Go Back\n      </ButtonGoBack>\n      <Section>\n        <Container>\n          <ContainerMovie>\n            <Img\n              src={poster_path ? IMG_URL + poster_path : defoltImg}\n              alt={`постер до фільму ${title}`}\n            />\n            <InfoMovie>\n              <div>\n                <Title>{title}</Title>\n\n                <p>\n                  <TextDecoration>Дата виходу:</TextDecoration> {release_date}\n                </p>\n                <p>\n                  <TextDecoration>Рейтинг:</TextDecoration> {vote_average}\n                </p>\n                <p>\n                  <TextDecoration>Жанр фільму:</TextDecoration>{' '}\n                  {genres &&\n                    genres.map(\n                      (x, i, arr) =>\n                        `${x.name} ${arr.length - 1 === i ? '' : '/'} `\n                    )}\n                </p>\n                <p>\n                  <TextDecoration>Протяжність фільму:</TextDecoration> {runtime}{' '}\n                  хвилин\n                </p>\n                <p>\n                  <TextDecoration>Прощо фільм {title}:</TextDecoration>{' '}\n                  {overview}\n                </p>\n              </div>\n              <ListLink>\n                <li>\n                  <LinkA to=\"cast\" onClick={() => setGoBack(prev => prev + 1)}>\n                    Актори\n                  </LinkA>\n                </li>\n                <li>\n                  <LinkA\n                    to=\"reviews\"\n                    onClick={() => setGoBack(prev => prev + 1)}\n                  >\n                    Відгуки\n                  </LinkA>\n                </li>\n              </ListLink>\n            </InfoMovie>\n          </ContainerMovie>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </Section>\n    </main>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListLink = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const LinkA = styled(Link)`\n  color: white;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const ContainerMovie = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  gap: 20px;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\n\nexport const InfoMovie = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 15px;\n  font-size: 26px;\n  color: white;\n`;\n\nexport const Img = styled.img`\n  width: 350px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const TextDecoration = styled.span`\n  font-weight: 700;\n  text-decoration: underline;\n`;\n\nexport const ButtonGoBack = styled.button`\n  position: fixed;\n  top: 30px;\n  left: 30px;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  color: white;\n  background-color: transparent;\n  font-size: 16px;\n  font-family: 'Orbitron', sans-serif;\n`;\n","import axios from 'axios';\n// const axios = require('axios').default;\nconst KEY = '8478375b0b2eb45c66ac10717e1ab9a2';\nconst URL = 'https://api.themoviedb.org/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const serverHitsList = async (page = 1) => {\n  const serverDataURL = `${URL}3/trending/movie/day?api_key=${KEY}&page=${page}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverSearch = async (name, page = 1) => {\n  const serverDataURL = `${URL}3/search/movie?api_key=${KEY}&language=uk-UA&query=${name}&page=${page}&include_adult=false`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverMovie = async id => {\n  const serverDataURL = `${URL}3/movie/${id}?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverActors = async id => {\n  const serverDataURL = `${URL}3/movie/${id}/credits?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponse = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=uk-UA&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponseUS = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// async function serverHitsList(page = 1) {}\n\n// async function serverSearch(name, page = 1) {}\n\n// async function serverMovie(id) {}\n\n// async function (id) {}\n\n// async function serverResponse(id, page = 1) {}\n\n// async function serverResponseUS(id, page = 1) {}\n"],"names":["Movie","id","useParams","useState","movieCard","setMovieCard","goBack","setGoBack","navigate","useNavigate","serverMovie","data","useEffect","serverDate","poster_path","title","release_date","vote_average","genres","runtime","overview","ButtonGoBack","onClick","size","Section","Container","ContainerMovie","Img","src","IMG_URL","defoltImg","alt","InfoMovie","Title","TextDecoration","map","x","i","arr","name","length","ListLink","LinkA","to","prev","Suspense","fallback","Loader","styled","Link","KEY","URL","serverHitsList","page","serverDataURL","axios","server","console","error","serverSearch","serverActors","serverResponse","serverResponseUS"],"sourceRoot":""}