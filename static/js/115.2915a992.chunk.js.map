{"version":3,"file":"static/js/115.2915a992.chunk.js","mappings":"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","sources":["pages/Cast/Cast.jsx","pages/Cast/Cast.styled.js","server/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { serverActors, IMG_URL } from 'server/api';\nimport { GridBox, Name, BoxName, Img, Elements } from './Cast.styled';\nimport anonim from '../../img/anonim.jpg';\n\nexport default function Cast() {\n  const { id } = useParams();\n  const [castList, setCastList] = useState([]);\n  useEffect(() => {\n    serverData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function serverData() {\n    const data = await serverActors(id);\n    const cast = await data.cast;\n    setCastList(cast);\n  }\n\n  return (\n    <GridBox>\n      {castList.map(({ id, profile_path, name, character }) => {\n        return (\n          <Elements key={id}>\n            <Img\n              src={profile_path ? IMG_URL + profile_path : anonim}\n              alt={`фото актора ${name}`}\n            />\n            <BoxName>\n              <Name>{name}</Name>\n              <p>{character}</p>\n            </BoxName>\n          </Elements>\n        );\n      })}\n    </GridBox>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const GridBox = styled.ul`\n  grid-gap: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  list-style: none;\n  margin: 0 auto;\n  margin-top: 20px;\n  max-width: calc(100vw - 48px);\n  padding: 0;\n`;\n\nexport const Img = styled.img`\n  max-height: 330px;\n`;\n\nexport const Elements = styled.li`\n  align-items: center;\n  border-radius: 10px;\n  color: #a8a8a8;\n  /* display: flex; */\n  /* flex-direction: column; */\n  font-size: 16px;\n  font-weight: 500;\n  height: 100%;\n  /* justify-content: space-between; */\n  overflow: hidden;\n`;\n\nexport const BoxName = styled.div`\n  padding: 10px 5px;\n  text-align: center;\n  background-color: black;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  border-bottom: 2px solid #fff;\n`;\n","import axios from 'axios';\n// const axios = require('axios').default;\nconst KEY = '8478375b0b2eb45c66ac10717e1ab9a2';\nconst URL = 'https://api.themoviedb.org/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const serverHitsList = async (page = 1) => {\n  const serverDataURL = `${URL}3/trending/movie/day?api_key=${KEY}&page=${page}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverSearch = async (name, page = 1) => {\n  const serverDataURL = `${URL}3/search/movie?api_key=${KEY}&language=uk-UA&query=${name}&page=${page}&include_adult=false`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverMovie = async id => {\n  const serverDataURL = `${URL}3/movie/${id}?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverActors = async id => {\n  const serverDataURL = `${URL}3/movie/${id}/credits?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponse = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=uk-UA&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponseUS = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// async function serverHitsList(page = 1) {}\n\n// async function serverSearch(name, page = 1) {}\n\n// async function serverMovie(id) {}\n\n// async function (id) {}\n\n// async function serverResponse(id, page = 1) {}\n\n// async function serverResponseUS(id, page = 1) {}\n"],"names":["Cast","id","useParams","useState","castList","setCastList","serverActors","data","cast","useEffect","serverData","GridBox","map","profile_path","name","character","Elements","Img","src","IMG_URL","anonim","alt","BoxName","Name","styled","KEY","URL","serverHitsList","page","serverDataURL","axios","server","console","error","serverSearch","serverMovie","serverResponse","serverResponseUS"],"sourceRoot":""}