{"version":3,"file":"static/js/871.03524219.chunk.js","mappings":"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","sources":["pages/Reviews/Reviews.jsx","pages/Reviews/Reviews.styled.js","server/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { serverResponse, serverResponseUS } from 'server/api';\nimport {\n  Span,\n  ReviewsBox,\n  List,\n  Autor,\n  Elements,\n  Text,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const { id } = useParams();\n  const [language, setLanguage] = useState(false);\n  const [reviewsList, setReviewsList] = useState([]);\n\n  useEffect(() => {\n    serverData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function serverData() {\n    const data = await serverResponse(id);\n    const results = await data.results;\n\n    if (results.length === 0) {\n      const dataUS = await serverResponseUS(id);\n      const resultsUS = await dataUS.results;\n      if (resultsUS.length === 0) {\n        return;\n      }\n      setLanguage(true);\n      setReviewsList(resultsUS);\n      return;\n    }\n    setReviewsList(results);\n  }\n\n  return (\n    <ReviewsBox>\n      {!language && <p>Вибачне але ми не знайшли відгуків</p>}\n      {language && (\n        <Text>\n          Вибачте але ми не знайшли відгуків на вашошій рідній мові. Але ми\n          знайшли на іншій мові.\n        </Text>\n      )}\n\n      <List>\n        {reviewsList.map(({ id, author, content, created_at, url }) => {\n          return (\n            <Elements key={id}>\n              <Autor>{author}</Autor>\n              <Text>\n                <Span>Відгук:</Span> {content}\n              </Text>\n              <Text>\n                <Span>Дата:</Span> {created_at.split('T')[0]}\n              </Text>\n              <Text href={url}>\n                <Span>Посилання на оригінал віднуку:</Span> {url}\n              </Text>\n            </Elements>\n          );\n        })}\n      </List>\n    </ReviewsBox>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ReviewsBox = styled.div`\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const Elements = styled.li`\n  &:not(:first-child) {\n    margin-top: 20px;\n  }\n`;\n\nexport const Autor = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 30px;\n  font-family: 'Orbitron', sans-serif;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-top: 20px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 700;\n`;\n","import axios from 'axios';\n// const axios = require('axios').default;\nconst KEY = '8478375b0b2eb45c66ac10717e1ab9a2';\nconst URL = 'https://api.themoviedb.org/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const serverHitsList = async (page = 1) => {\n  const serverDataURL = `${URL}3/trending/movie/day?api_key=${KEY}&page=${page}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverSearch = async (name, page = 1) => {\n  const serverDataURL = `${URL}3/search/movie?api_key=${KEY}&language=uk-UA&query=${name}&page=${page}&include_adult=false`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverMovie = async id => {\n  const serverDataURL = `${URL}3/movie/${id}?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverActors = async id => {\n  const serverDataURL = `${URL}3/movie/${id}/credits?api_key=${KEY}&language=uk-UA`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponse = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=uk-UA&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const serverResponseUS = async (id, page = 1) => {\n  const serverDataURL = `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=${page}`;\n  try {\n    const server = await axios.get(serverDataURL);\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// async function serverHitsList(page = 1) {}\n\n// async function serverSearch(name, page = 1) {}\n\n// async function serverMovie(id) {}\n\n// async function (id) {}\n\n// async function serverResponse(id, page = 1) {}\n\n// async function serverResponseUS(id, page = 1) {}\n"],"names":["Reviews","id","useParams","useState","language","setLanguage","reviewsList","setReviewsList","serverResponse","data","results","length","serverResponseUS","dataUS","resultsUS","useEffect","serverData","ReviewsBox","Text","List","map","author","content","created_at","url","Elements","Autor","Span","split","href","styled","KEY","URL","IMG_URL","serverHitsList","page","serverDataURL","axios","server","console","error","serverSearch","name","serverMovie","serverActors"],"sourceRoot":""}